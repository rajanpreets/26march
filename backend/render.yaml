# render.yaml - Includes debugging command 'ls -la'

services:
  - type: web
    name: 26march                # Your service name
    env: python                  # Environment is Python
    region: oregon               # Deployment region
    plan: free                   # Render plan
    
    # Tells Render to change to the 'backend' directory first
    rootDir: backend            

    # Command to install dependencies AND list directory contents for debugging
    # ASSUMES backend/requirements.txt exists
    buildCommand: |
      pip install -r requirements.txt
      echo "--- Listing backend directory contents during build ---"
      ls -la                  # <-- DEBUGGING: List files in the 'backend' dir
    
    # Command to start the web server using Gunicorn
    # Looks for 'app' object in 'backend/src/app.py'
    startCommand: gunicorn src.app:app 
    
    autoDeploy: true             # Automatically deploy on push to the specified branch
    
    # Deploy ONLY from this branch - MAKE SURE THIS IS YOUR INTENDED BRANCH
    branch: backend              # <-- Verify this is the branch you are pushing to! 
    
    healthCheckPath: /health     # Optional: Endpoint for Render health checks
    
    envVars:
      - key: PYTHON_VERSION
        value: 3.11              # Using 3.11 often suffices, Render picks a recent patch.
      - key: GROQ_API_KEY
        sync: false              # Keep API keys out of version control
      - key: SERPER_API_KEY
        sync: false              # Keep API keys out of version control
      - key: ALLOWED_ORIGINS
        value: "https://two6march-1.onrender.com,http://localhost:3000" # Example CORS origins
      - key: DEBUG
        value: "False"           # Disable debug mode in production
      - key: PORT
        value: "10000"           # Render will inject the PORT Gunicorn should bind to
